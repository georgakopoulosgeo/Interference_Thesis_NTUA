################################################################################
################################################################################
## MINIKUBE

minikube start \
  --driver=docker \
  --cpus=3 \
  --memory=3072 \
  --container-runtime=containerd \
  --nodes=2 \
  --extra-config=kube-proxy.mode=ipvs

# Apply CPU pinning
docker update minikube --cpus=3 --cpuset-cpus="0-2"  
docker update minikube-m02 --cpus=3 --cpuset-cpus="3-5"


################################################################################
################################################################################
## WORKLOADS

1. Nginx


################################################################################
################################################################################
## INTERFERENCE

## Using iBench
## Create iBench container
sudo docker run -it --rm ibench /bin/bash
## Run scripts (cpu, memCap, memBw, l3, l2, l1i ,l1d)
(https://github.com/stanford-mast/iBench/tree/master/src)

// Example: Maximize memory capacity and memory bandwidth for 80 seconds
// ./memCap 80 & ./memBw 80


## Using chagned iBench scripts
## Just run ./cpu_changed 80 80 
(80 seconds of 80% usage)


################################################################################
################################################################################
## RUN FINAL EXPERIMENT 

./run_experiment.sh <output_filename.csv> <traffic_type> <interference_type>


ARGUMENTS:
    <output_filename.csv>       Output file where metrics will be saved inside:
                                /home/george/logs/traffic_generator

    <traffic_type>              Select the RPS profile to apply minute-by-minute
        - low       → gradually increases from 800 to 2000 RPS
        - wide      → gradually increases from 500 to 4000 RPS

    <interference_type>         Select the interference schedule
        - light     → injects constant low interference pods
        - ramp_up   → ramps interference up during the test
        - balanced  → injects a balanced and shifting mix of interferences

INCLUDES:
    - Traffic Generator runs:  generator.py with your selected RPS pattern
    - Interference Injector:   inject_ibench_pods.py with selected interference
    - Both run concurrently, and logs are stored in the same folder

